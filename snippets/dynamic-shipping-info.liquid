<div id="market-shipping-info" class="border p-4 rounded-md text-sm">
  {% assign country_code = localization.country.iso_code | upcase %}
  {% assign currency_symbol = localization.country.currency.symbol %}
  {% comment %}
  {% capture free_shipping_threshold %}
    {% case country_code %}
      {% when 'US' %}Free shipping on orders over {{ currency_symbol }}100 <span class="palirooT-view_option">View Options</span>
      {% when 'AE' %}Free shipping on orders over {{ currency_symbol }}200 <span class="palirooT-view_option">View Options</span>
      {% when 'FR' or 'DE' or 'IT' or 'ES' %}Free shipping on orders over {{ currency_symbol }}200 <span class="palirooT-view_option">View Options</span>
      {% else %}Free shipping on orders over {{ currency_symbol }}200 <span class="palirooT-view_option">View Options</span>
    {% endcase %}
  {% endcapture %}
  {% endcomment %}
  
{% capture free_shipping_threshold %}
  {{ localization.market.metafields.custom.free_ship_text }} {{ localization.market.metafields.custom.custom_ship_rate.value | money_without_trailing_zeros }} <span class="palirooT-view_option">View Options</span>
  {% endcapture %}
  {% capture return_policy %}
    {{ localization.market.metafields.custom.returns_and_exchange }}
  {% endcapture %}

  {% capture duties_info %}
    {{ localization.market.metafields.custom.duties_and_taxes }}
  {% endcapture %}

  <div class="shipping-info">
    <div class="country__info">
      <span class="country_flag">
        {% if localization.country.name == 'Israel' %}
          <img
            src="https://flagcdn.com/ps.svg"
            alt="{{ localization.country.name }} flag"
            width="16"
            height="10"
            loading="lazy"
            class="inline mr-1 align-middle"
          >
        {% else %}
          <img
            src="https://flagcdn.com/{{ country_code | downcase }}.svg"
            alt="{{ localization.country.name }} flag"
            width="16"
            height="10"
            loading="lazy"
            class="inline mr-1 align-middle"
          >
        {% endif %}
      </span>
      <p>
        {% if localization.country.name == 'Israel' %}
          We ship to
          <span class="country__name_pop" data-iso-code="{{ country_code | downcase }}">
            {{- localization.country.name -}}
          </span>
          (Occupied Palestine)
        {% else %}
          We ship to
          <span class="country__name_pop" data-iso-code="{{ country_code | downcase }}">
            {{- localization.country.name -}}
          </span>
        {% endif %}
      </p>
    </div>
    <div>
      <ul class="info__type">
        <li class="free-shipping">
          <span class="country_svg">{%- render 'icon-earth' -%}</span>
          <p>{{ free_shipping_threshold }}</p>
        </li>
        {% unless country_code != 'US' %}
        <li class="delivery-message">
          <span class="country_svg">{%- render 'icon-box' -%}</span>
          <p id="delivery-message"></p>
        </li>
        {% endunless %}
        <li class="return-period">
          <span class="country_svg">{%- render 'icon-return-period' -%}</span>
          <p>{{ return_policy }}</p>
        </li>
        {% unless country_code == 'US' %}
        <li class="tax-info">
          <span class="country_svg">{%- render 'icon-tax-info' -%}</span>
          <p>{{ duties_info }}</p>
        </li>
        {% endunless %}
        
      </ul>
    </div>
  </div>
</div>

<!-- The popup content -->
<div class="shipping-popup" id="shippingPopup">
  <div class="popup-content">
    <button class="popup-close">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M13.4099 11.9999L19.7099 5.70994C19.8982 5.52164 20.004 5.26624 20.004 4.99994C20.004 4.73364 19.8982 4.47825 19.7099 4.28994C19.5216 4.10164 19.2662 3.99585 18.9999 3.99585C18.7336 3.99585 18.4782 4.10164 18.2899 4.28994L11.9999 10.5899L5.70994 4.28994C5.52164 4.10164 5.26624 3.99585 4.99994 3.99585C4.73364 3.99585 4.47824 4.10164 4.28994 4.28994C4.10164 4.47825 3.99585 4.73364 3.99585 4.99994C3.99585 5.26624 4.10164 5.52164 4.28994 5.70994L10.5899 11.9999L4.28994 18.2899C4.19621 18.3829 4.12182 18.4935 4.07105 18.6154C4.02028 18.7372 3.99414 18.8679 3.99414 18.9999C3.99414 19.132 4.02028 19.2627 4.07105 19.3845C4.12182 19.5064 4.19621 19.617 4.28994 19.7099C4.3829 19.8037 4.4935 19.8781 4.61536 19.9288C4.73722 19.9796 4.86793 20.0057 4.99994 20.0057C5.13195 20.0057 5.26266 19.9796 5.38452 19.9288C5.50638 19.8781 5.61698 19.8037 5.70994 19.7099L11.9999 13.4099L18.2899 19.7099C18.3829 19.8037 18.4935 19.8781 18.6154 19.9288C18.7372 19.9796 18.8679 20.0057 18.9999 20.0057C19.132 20.0057 19.2627 19.9796 19.3845 19.9288C19.5064 19.8781 19.617 19.8037 19.7099 19.7099C19.8037 19.617 19.8781 19.5064 19.9288 19.3845C19.9796 19.2627 20.0057 19.132 20.0057 18.9999C20.0057 18.8679 19.9796 18.7372 19.9288 18.6154C19.8781 18.4935 19.8037 18.3829 19.7099 18.2899L13.4099 11.9999Z" fill="#909090"></path>
      </svg>
    </button>
    <h3>{{ shipping_options_head }}</h3>
    <table>
      {% if shipping_options_head != blank %}
        <thead>
          <tr>
            <th>{{ shipping_options_head }}</th>
            <th>{{ estimated_delivery_head }}</th>
          </tr>
        </thead>
      {% endif %}
      <tbody>
        {% if ground_ship_info != blank %}
          <tr>
            <td>{{ ground_ship_title }}</td>
            <td>{{ ground_ship_info }}</td>
          </tr>
        {% endif %}
        {% if express_ship_info != blank %}
          <tr>
            <td>{{ express_ship_title }}</td>
            <td>{{ express_ship_info }}</td>
          </tr>
        {% endif %}
        {% if fastest_ship_info != blank %}
          <tr>
            <td>{{ fastest_ship_title }}</td>
            <td>{{ fastest_ship_info }}</td>
          </tr>
        {% endif %}
      </tbody>
    </table>
  </div>
</div>

<!-- JavaScript to handle the popup and body class -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const viewOptionLink = document.querySelector('.palirooT-view_option');
    const popup = document.getElementById('shippingPopup');
    const closeButton = popup.querySelector('.popup-close');

    // Show popup and add class to body on click
    viewOptionLink.addEventListener('click', function (e) {
      e.preventDefault();
      popup.classList.add('active');
      document.body.classList.add('overflow-hidden'); // Add class to body
    });

    // Close popup and remove class from body on close button click
    closeButton.addEventListener('click', function () {
      popup.classList.remove('active');
      document.body.classList.remove('overflow-hidden'); // Remove class from body
    });

    // Close popup and remove class from body when clicking outside the popup content
    popup.addEventListener('click', function (e) {
      if (e.target === popup) {
        popup.classList.remove('active');
        document.body.classList.remove('overflow-hidden'); // Remove class from body
      }
    });
  });
</script>

<!-- On click Country open country popup -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const countrySpan = document.querySelector('.country__name_pop');
    countrySpan.addEventListener('click', function () {
      document.body.classList.toggle('welcmpopup_added');
    });
  });
</script>
<script>
$(function () {
    function updateMessage() {
        // Get current time in US Pacific Time
        const nowUTC = new Date();
        const now = new Date(nowUTC.toLocaleString("en-US", { timeZone: "America/Los_Angeles" }));

        // Set cutoff time to 12:00 PM PST today
        const cutoff = new Date(now);
        cutoff.setHours(12, 0, 0, 0);

        // If now is past 12:00 PM, set cutoff to tomorrow at 12:00 PM
        if (now >= cutoff) {
            cutoff.setDate(cutoff.getDate() + 1);
        }

        const diffMs = cutoff - now;
        const diffMinutes = Math.floor(diffMs / 60000);
        const hours = Math.floor(diffMinutes / 60);
        const minutes = diffMinutes % 60;

        const timeLeftText = `Buy in the next ${hours}h ${minutes}min`;

        const monthNames = ["January", "February", "March", "April", "May", "June",
                            "July", "August", "September", "October", "November", "December"];

        // Function to add business days skipping weekends
        function getBusinessDayOffsetDate(startDate, businessDaysToAdd) {
            let date = new Date(startDate);
            let added = 0;
            while (added < businessDaysToAdd) {
                date.setDate(date.getDate() + 1);
                const day = date.getDay();
                if (day !== 0 && day !== 6) { // Not Sunday or Saturday
                    added++;
                }
            }
            const month = monthNames[date.getMonth()];
            const dayNum = date.getDate();
            return `${month} ${dayNum}`;
        }

        const deliveryStart = getBusinessDayOffsetDate(now, 3);
        const deliveryEnd = getBusinessDayOffsetDate(now, 4);

        const message = `${timeLeftText} to have it delivered by ${deliveryStart} â€“ ${deliveryEnd}.`;

        $('#delivery-message').html(message);
    }

    updateMessage(); // Initial load
    setInterval(updateMessage, 60000); // Update every 1 min
});
</script>